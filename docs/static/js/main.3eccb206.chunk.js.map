{"version":3,"sources":["services/api.js","components/CharacterCard.js","components/CharacterList.js","images/Rick_and_Morty.png","components/Header.js","components/FilterName.js","components/Filters.js","images/homero-simpson-400x360.jpg","components/CharacterDetail.js","components/App.js","index.js"],"names":["getApi","fetch","then","response","json","data","results","map","character","name","image","species","status","origin","episode","id","CharacterCard","props","to","className","src","img","alt","CharacterList","newCharacter","characters","Header","logo","FiltersName","htmlFor","type","onChange","ev","inputValue","target","value","handleFilter","filterCharacters","handleFormSubmit","preventDefault","Filters","action","onSubmit","FilterName","CharacterDetail","undefined","foundCharacter","length","App","useState","setCharacters","setFilterCharacters","useEffect","filterPerson","filter","toUpperCase","includes","exact","path","render","foundId","parseInt","match","params","find","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3eccb206.chunk.js","sourcesContent":["const getApi = () => {\r\n  return fetch(\r\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) =>\r\n      data.results.map((character) => {\r\n        return {\r\n          name: character.name,\r\n          image: character.image,\r\n          species: character.species,\r\n          status: character.status,\r\n          origin: character.origin.name,\r\n          episode: character.episode,\r\n          id: character.id,\r\n        };\r\n      })\r\n    );\r\n};\r\n\r\nexport default getApi;\r\n","import React from \"react\";\r\nimport \"./characterCard.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <Link to={`/character/${props.id}`}>\r\n      <article className=\"characterCard\">\r\n        <img\r\n          className=\"characterCard__img\"\r\n          src={props.img}\r\n          alt={`Character: ${props.name}`}\r\n        />\r\n        <div className=\"characterCard__info\">\r\n          <h2 className=\"characterCard__info--name\">{props.name}</h2>\r\n          <p className=\"characterCard__info--type\">{props.species}</p>\r\n        </div>\r\n      </article>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport CharacterCard from \"./CharacterCard\";\r\nimport \"./characterList.scss\";\r\n\r\nconst CharacterList = (props) => {\r\n  const newCharacter = props.characters.map((character) => {\r\n    return (\r\n      <li key={character.id} id={character.id}>\r\n        <CharacterCard\r\n          name={character.name}\r\n          img={character.image}\r\n          species={character.species}\r\n          id={character.id}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <ul className=\"characterList\">{newCharacter}</ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","export default __webpack_public_path__ + \"static/media/Rick_and_Morty.de13d484.png\";","import logo from \"../images/Rick_and_Morty.png\";\r\nimport React from \"react\";\r\nimport \"./header.scss\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"headerLogo\">\r\n      <img src={logo} alt=\"Logo Rick and Morty\" className=\"headerLogo__img\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./filterName.scss\";\r\n\r\nconst FiltersName = (props) => {\r\n  const handleChange = (ev) => {\r\n    const inputValue = ev.target.value;\r\n    props.handleFilter(inputValue);\r\n  };\r\n  return (\r\n    <>\r\n      <label htmlFor=\"nameCharacter\"></label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"nameCharacter\"\r\n        className=\"filterCharacter__input\"\r\n        onChange={handleChange}\r\n        value={props.filterCharacters}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FiltersName;\r\n","import React from \"react\";\r\nimport FilterName from \"./FilterName\";\r\n\r\nconst handleFormSubmit = (ev) => {\r\n  ev.preventDefault();\r\n};\r\nconst Filters = (props) => {\r\n  return (\r\n    <form action=\"\" className=\"filterCharacter\" onSubmit={handleFormSubmit}>\r\n      <FilterName\r\n        handleFilter={props.handleFilter}\r\n        filterCharacters={props.filterCharacters}\r\n      ></FilterName>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","export default __webpack_public_path__ + \"static/media/homero-simpson-400x360.073c84eb.jpg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport \"./characterDetail.scss\";\r\nimport logo from \"../images/homero-simpson-400x360.jpg\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  if (props.foundCharacter === undefined) {\r\n    return (\r\n      <Link to=\"/\">\r\n        <article className=\"characterDetail\">\r\n          <img className=\"characterDetail__img\" src={logo} alt=\"\" />\r\n          <p className=\"characterDetail__text\">\r\n            Te has equivocado de personaje\r\n          </p>\r\n        </article>\r\n      </Link>\r\n    );\r\n  } else {\r\n    return (\r\n      <Link to=\"/\">\r\n        <article className=\"characterDetail\">\r\n          <img\r\n            className=\"characterDetail__img\"\r\n            src={props.foundCharacter.image}\r\n            alt={`Imagen: ${props.foundCharacter.image}`}\r\n          />\r\n          <section className=\"characterDetail__info\">\r\n            <h3 className=\"characterDetail__info--name\">\r\n              {props.foundCharacter.name}\r\n            </h3>\r\n            <ul className=\"characterDetail__info--list\">\r\n              <li>Status: {props.foundCharacter.status}</li>\r\n              <li>Species: {props.foundCharacter.species}</li>\r\n              <li>Origin: {props.foundCharacter.origin}</li>\r\n              <li>Episodes: {props.foundCharacter.episode.length}</li>\r\n            </ul>\r\n          </section>\r\n        </article>\r\n      </Link>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport getApi from \"../services/api\";\nimport CharacterList from \"./CharacterList\";\nimport Header from \"./Header\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport { Route, Switch } from \"react-router-dom\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [filterCharacters, setFilterCharacters] = useState(\"\");\n\n  useEffect(() => {\n    getApi().then((data) => {\n      setCharacters(data);\n    });\n  }, []);\n\n  const handleFilter = (inputValue) => {\n    setFilterCharacters(inputValue);\n  };\n\n  const filterPerson = characters.filter((character) => {\n    return character.name\n      .toUpperCase()\n      .includes(filterCharacters.toUpperCase());\n  });\n  const renderCharacterDetail = (props) => {\n    const foundId = parseInt(props.match.params.id);\n    const foundCharacter = characters.find((character) => {\n      return character.id === foundId;\n    });\n    return <CharacterDetail foundCharacter={foundCharacter} />;\n  };\n  return (\n    <>\n      <Header></Header>\n      <main className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters\n              handleFilter={handleFilter}\n              filterCharacters={filterCharacters}\n            ></Filters>\n            <CharacterList characters={filterPerson}></CharacterList>\n          </Route>\n          <Route path=\"/character/:id\" render={renderCharacterDetail}></Route>\n        </Switch>\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/index.scss\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}